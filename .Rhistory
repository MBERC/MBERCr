devtools::install_github("MBERC/MBERCr")
devtools::document()
devtools::document()
usethis::create_package()
usethis::create_package("..")
library("devtools")
library("roxygen2")
create_package("MBERCr")
setwd(parentDirectory)
devtools::create("MBERCr")
devtools::document()
devtools::install("../MBERCr")
library(marmap)
# get bathymetry data
b = getNOAA.bathy(lon1 = -68, lon2 = -62, lat1 = 40, lat2 = 45,
resolution = 1)
# make a simple track line
lin = data.frame(
lon = c(-65.17536, -65.37423, -65.64541, -66.06122, -66.15161),
lat = c(43.30837, 42.94679, 42.87448, 42.92871, 42.72985)
)
# make a few points
pts = data.frame(
lon = c(-65.3, -65.7, -64.1),
lat = c(43.4, 43, 42.9)
)
# build a polygon (in this case the 'Roseway Basin Area To Be Avoided')
ply = data.frame(
lon = c(-64.916667,-64.983333,-65.516667, -66.083333),
lat = c(43.266667,  42.783333, 42.65, 42.866667)
)
plot(b)
b = getNOAA.bathy(lon1 = -55, lon2 = -54, lat1 = -35.6, lat2 = -35.8,
resolution = 1)
plot(b)
b = getNOAA.bathy(lon1 = 158.796994, lon2 = -174.411680, lat1 = -49.196136, lat2 = -28.510674,
resolution = 1)
b = getNOAA.bathy(lon1 = 158.8, lon2 = -174.4, lat1 = -49.2, lat2 = -28.5,
resolution = 1)
plot(b)
b = getNOAA.bathy(lon1 = 158.8, lon2 = -174.4, lat1 = -49.2, lat2 = -28.5,
resolution = 1)
b = getNOAA.bathy(lon1 = 158.8, lon2 = -174.4, lat1 = -49.2, lat2 = -28.5,
resolution = 10)
plot(b)
b = getNOAA.bathy(lon1 = -49.2, lon2 = -28.5, lat1 = 158.8, lat2 = -174.4,
resolution = 10)
b = getNOAA.bathy(lon1 = 158.8, lon2 = -174.4, lat1 = -28.5, lat2 = -49.2,
resolution = 10)
plot(B)
plot(B)
plot(b)
b = getNOAA.bathy(lon1 = -158.8, lon2 = -174.4, lat1 = -28.5, lat2 = -49.2,
resolution = 10)
plot(b)
b = getNOAA.bathy(lon1 = -159, lon2 = -180, lat1 = -28.5, lat2 = -49.2,
resolution = 10)
plot(b)
b = getNOAA.bathy(lon1 = 159, lon2 = -180, lat1 = -28.5, lat2 = -49.2,
resolution = 10)
plot(b)
b = getNOAA.bathy(lon1 = -180, lon2 = 159, lat1 = -28.5, lat2 = -49.2,
resolution = 10)
plot(b)
b = getNOAA.bathy(lon1 = 150, lon2 = 180, lat1 = -28.5, lat2 = -49.2,
resolution = 10)
plot(b)
b = getNOAA.bathy(lon1 = 150, lon2 = 180, lat1 = -28.5, lat2 = -49.2,
resolution = 1)
plot(b)
b = getNOAA.bathy(lon1 = 150, lon2 = 180, lat1 = -28.5, lat2 = -49.2,
resolution = 5)
library(marmap)
# get bathymetry data
b = getNOAA.bathy(lon1 = 160, lon2 = 180, lat1 = -28.5, lat2 = -49.2,
resolution = 5)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# make a simple track line
lin = data.frame(
lon = c(160,165,170,175,180),
lat = c(-50,-45,-40,-35,-30)
)
# make a few points
pts = data.frame(
lon = c(170, 170, 175),
lat = c(-45, -40, -30)
)
ply = data.frame(
lon = c(160,160,165,165),
lat = c(-45,-35,-35,-45)
)
library(oce)
library(ocedata)
data("coastlineWorldFine")
# convert bathymetry
bathyLon = as.numeric(rownames(b))
bathyLat = as.numeric(colnames(b))
bathyZ = as.numeric(b)
dim(bathyZ) = dim(b)
# define plotting region
mlon = mean(pts$lon)
mlat = mean(pts$lat)
span = 300
# plot coastline (no projection)
plot(coastlineWorldFine, clon = mlon, clat = mlat, span = span)
# plot bathymetry
contour(bathyLon,bathyLat,bathyZ,
levels = c(-50, -100, -150, -200, -250),
lwd = c(1, 1, 2, 2, 3),
lty = c(3, 1, 3, 1, 3),
drawlabels = F, add = TRUE, col = 'darkgray')
plot(b)
# make a few points
pts = data.frame(
lon = c(162, 170, 175),
lat = c(-45, -40, -30)
)
ply = data.frame(
lon = c(160,160,165,165),
lat = c(-45,-35,-35,-45)
)
library(oce)
library(ocedata)
data("coastlineWorldFine")
library(oce)
library(ocedata)
data("coastlineWorldFine")
View(coastlineWorldFine)
# convert bathymetry
bathyLon = as.numeric(rownames(b))
bathyLat = as.numeric(colnames(b))
bathyZ = as.numeric(b)
dim(bathyZ) = dim(b)
# define plotting region
mlon = mean(pts$lon)
mlat = mean(pts$lat)
span = 300
# plot coastline (no projection)
plot(coastlineWorldFine, clon = mlon, clat = mlat, span = span)
span = 3000
# plot coastline (no projection)
plot(coastlineWorldFine, clon = mlon, clat = mlat, span = span)
span = 800
# plot coastline (no projection)
plot(coastlineWorldFine, clon = mlon, clat = mlat, span = span)
span = 1000
# plot coastline (no projection)
plot(coastlineWorldFine, clon = mlon, clat = mlat, span = span)
span = 2000
# plot coastline (no projection)
plot(coastlineWorldFine, clon = mlon, clat = mlat, span = span)
# plot bathymetry
contour(bathyLon,bathyLat,bathyZ,
levels = c(-50, -100, -150, -200, -250),
lwd = c(1, 1, 2, 2, 3),
lty = c(3, 1, 3, 1, 3),
drawlabels = F, add = TRUE, col = 'darkgray')
# add depth legend
legend("bottomright", seg.len = 3, cex = 0.8,
lwd = c(1, 1, 2, 2, 3),
lty = c(3, 1, 3, 1, 3),
legend = c("50", "100", "150", "200", "250"),
col = 'darkgray', title = "Depth [m]", bg= "white")
# add map data
points(pts, pch = 16, col = 'red')
lines(lin, col = 'blue')
polygon(ply, lty = 2)
span = 2500
# plot coastline (no projection)
plot(coastlineWorldFine, clon = mlon, clat = mlat, span = span)
ggplot(BathyZ)+geom_point()
library(ggplot2)
ggplot(BathyZ)+geom_point()
ggplot(bathyZ)+geom_point()
Bath_df<-as.data.frame(bathyZ)
View(Bath_df)
Bath_df<-as.data.frame(lat=bathyLat,
lon=bathyLon,
z=bathyZ)
# convert bathymetry
bathyLon = as.numeric(rownames(b))
bathyLat = as.numeric(colnames(b))
bathyZ = as.numeric(b)
dim(bathyZ) = dim(b)
Bath_df<-as.data.frame(lat=bathyLat,
lon=bathyLon,
z=bathyZ)
# convert bathymetry
bathyLon = as.vector(as.numeric(rownames(b)))
bathyLat = as.vector(as.numeric(colnames(b)))
bathyZ = as.vector(as.numeric(b))
Bath_df<-as.data.frame(lat=bathyLat,
lon=bathyLon,
z=bathyZ)
Bath_df<-data.frame(lat=bathyLat,
lon=bathyLon,
z=bathyZ)
View(Bath_df)
# define plotting region
mlon = mean(pts$lon)
mlat = mean(pts$lat)
span = 2500
library(sf)
sf_b<-st_as_sf(b)
library(sf)
sf_b<-st_as_sf(b)
Bath_df<-data.frame(lat=as.vector(as.numeric(rownames(b))),
lon=as.vector(as.numeric(colnames(b))),
z=as.vector(as.numeric(b)))
View(Bath_df)
Bath_df<-st_as_sf(data.frame(lat=as.vector(as.numeric(rownames(b))),
lon=as.vector(as.numeric(colnames(b))),
z=as.vector(as.numeric(b))))
Bath_sf<-sf::st_as_sf(Bath_df,
coords = c("lon", "lat", "z"), crs = 4326)
View(Bath_sf)
Bathy_df<-data.frame(lat=as.vector(as.numeric(rownames(b))),
lon=as.vector(as.numeric(colnames(b))),
z=as.vector(as.numeric(b)))
Bathy_sf<-sf::st_as_sf(Bathy_df,
coords = c("lon", "lat", "z"), crs = 4326)
ggplot()+geom_sf(Bath_sf)
ggplot(Bath_sf)+geom_sf()
Bathy_sf<-sf::st_as_sf(Bathy_df,
coords = c("lon", "lat"), crs = 4326)
ggplot(Bath_sf)+geom_sf(aes(fill=z))
View(Bath_sf)
Bathy_sf<-sf::st_as_sf(Bathy_df,
coords = c("lon", "lat"), crs = 4326)
ggplot(Bath_sf)+geom_sf(aes(fill=z))
View(Bath_sf)
View(Bathy_sf)
ggplot(Bathy_sf)+geom_sf(aes(fill=z))
Bathy_sf<-sf::st_as_sf(Bathy_df,
coords = c("lon", "lat"))
ggplot(Bathy_sf)+geom_sf(aes(fill=z))
B<-as.SpatialGridDataFrame(b)
View(B)
sf_b<-st_as_sf(B)
View(sf_b)
View(sf_b)
ggplot(sf_b)+geom_sf(aes(fill=layer))
ggplot(sf_b)+geom_sf(aes(colour=layer))
View(coastlineWorldFine)
ggplot(sf_b)+geom_sf(aes(colour=layer))+
theme_Bede()
ggplot(sf_b)+geom_sf(aes(colour=layer))+
theme_Bede()
devtools:document()
devtools::document()
devtools::document()
